---
services:
  frontend_tui:
    build:
      network: host
      context: .
      additional_contexts:
        cmd_app: ./cmd/app
      dockerfile: ./cmd/app/Dockerfile
    environment:
      - APP_HOST=proxy
      - APP_PORT=80
    stdin_open: true
    tty: true
    networks:
      - public
    depends_on: 
      - proxy
  proxy:
    image: nginx:1.29.0
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    networks:
      - public
      - private
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
  backend:
    image: backendimage
    build:
      network: host
      context: .
      additional_contexts:
        cmd_server: ./cmd/server
      dockerfile: ./cmd/server/Dockerfile
    env_file: ./cmd/secrets/var.dev
    environment:
      - MIGRATIONS_DIR=/bin/maindir/migrations
      - PG_HOST=postgres
      - PG_DATABASE=postgres
      - PG_USER=postgres
      - PG_PORT=5433
      - PG_SSLMODE=prefer
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DEBUG=${REDIS_DEBUG}
      - APP_PORT=8080
    healthcheck:
      test: ["CMD-SHELL", "curl http://backend:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 15s
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - private

  redis:
    image: valkey/valkey:8.1-alpine
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping | grep PONG"]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 15s
    networks:
      - private

  postgres:
    image: postgres:17.4-alpine3.21
    restart: always
    user: postgres
    environment:
      PGSSLMODE: prefer
      PGPORT: 5433
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      PG_TRUST_LOCALNET: true
      POSTGRES_PASSWORD_FILE: /run/secrets/pg_password
    secrets:
      - pg_password
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 30s
      timeout: 3s
      retries: 5
      start_period: 15s
    networks:
      - private
      
secrets:
  pg_password:
    file: ./cmd/secrets/pg_password.txt
networks:
  public:
  private:
